# Generated by Django 4.1.9 on 2023-07-07 14:58

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(db_index=True, default='Campus 3 - Centro Politénico', help_text='Informe o Nome do Campus mais próximo', max_length=60, verbose_name='Nome do Campus')),
                ('ponto_central', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326, verbose_name='Centróide do Campus')),
            ],
            options={
                'verbose_name': 'Identifação do Campus da UFPR',
                'verbose_name_plural': 'Campi',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Ocorrencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oco_nomeOcorrencia', models.CharField(db_index=True, help_text='Nome que identifica uma situação que será registrada', max_length=120, unique=True, verbose_name='Nome do Serviço')),
                ('oco_dataCadastro', models.DateTimeField(auto_now_add=True, help_text='Data do cadastro de determinado serviço', verbose_name='Data do Cadastro')),
                ('oco_dataAlteracao', models.DateTimeField(auto_now=True, help_text='Data em que foi alterado o cadastro do serviço', verbose_name='Data da Alteração')),
                ('oco_descricaoOcorrencia', models.CharField(help_text='Descreva de forma clara e sucinta o serviço.', max_length=120, verbose_name='Descrição do Serviço')),
                ('oco_ipAddress', models.GenericIPAddressField(help_text='Endereço IP do usuário que efetuou cadastro ou a última alteração', verbose_name='Endereço IP')),
                ('oco_status', models.BooleanField(default=True, help_text='Indica se o serviço está ativo ou não', verbose_name='Status do Serviço')),
            ],
            options={
                'db_table': 'Ocorrencia',
            },
        ),
        migrations.CreateModel(
            name='TipoOcorrencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('toc_tipoOcorrencia', models.CharField(db_index=True, help_text='Categoria na qual o Reporte será classificado', max_length=50, unique=True, verbose_name='Categoria do Reporte')),
                ('toc_descOcorrencia', models.CharField(help_text='Descrição sucinta da Categoria', max_length=250, verbose_name='Descrição da Categoria')),
                ('toc_dataCadastro', models.DateTimeField(auto_now_add=True, help_text='Data na qual houve o Cadastro da Categoria', verbose_name='Data de Cadastro')),
                ('toc_dataAlteracao', models.DateTimeField(auto_now=True, help_text='Data em que ocorreu a última alteração da Categoria', verbose_name='Data da Alteração')),
                ('toc_ipAddress', models.GenericIPAddressField(help_text='Endereço IP do Usuário que efetuou o Cadastro ou Alteração', verbose_name='Endereço IP')),
                ('toc_usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'db_table': 'TipoOcorrencia',
            },
            managers=[
                ('objetos', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WebGis.categoria')),
            ],
        ),
        migrations.CreateModel(
            name='RegistroServico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_origem', models.GenericIPAddressField()),
                ('data_registro', models.DateTimeField(default=django.utils.timezone.now)),
                ('data_alteracao', models.DateTimeField(auto_now=True)),
                ('ponto', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fotos/')),
                ('campi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WebGis.campus')),
                ('servico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WebGis.servico')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RegistroOcorrencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_ipAddress', models.GenericIPAddressField(help_text='Endereço IP', verbose_name='Endereço IP do Usuário')),
                ('reg_dataRegistro', models.DateTimeField(auto_now=True, help_text='Data de Registro da Ocorrência', verbose_name='Data do Registro')),
                ('reg_dataOcorrencia', models.DateTimeField(auto_now_add=True, help_text='Data efetiva da Ocorrência')),
                ('reg_descricaoRegistro', models.TextField(help_text='Descreva clara e sucintamente seu Reporte', max_length=500, verbose_name='Descrição do Registro')),
                ('reg_localOcorrencia', django.contrib.gis.db.models.fields.PointField(help_text='Coordenadas Geográficas do local onde ocorreu seu Reporte', srid=4326, verbose_name='Coordenadas do Local')),
                ('reg_Ocorrencia', models.ManyToManyField(help_text='Relação com a Tabela de Serviços', to='WebGis.ocorrencia', verbose_name='Código do Serviço')),
                ('reg_usuarioRegistro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'RegistroOcorrencia',
            },
            managers=[
                ('objetos', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='ocorrencia',
            name='oco_tipoOcorrencia',
            field=models.ForeignKey(help_text='Nome da Categoria que o Serviço se enquadra', on_delete=django.db.models.deletion.CASCADE, to='WebGis.tipoocorrencia', verbose_name='Categoria'),
        ),
        migrations.AddField(
            model_name='ocorrencia',
            name='oco_usuario',
            field=models.ForeignKey(help_text='Usuário que cadastrou ou alterou um Serviço', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário'),
        ),
    ]
