version: '3.9'
services:
  db:
    image: postgis/postgis:15-3.3
    restart: always
    environment:
      POSTGRES_DB: ${PG_DBNAME}
      POSTGRES_PORT: ${PG_PORT}
      POSTGRES_USER: ${PG_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${PG_PASSWORD:-postgres}
      POSTGRES_DATA: ${PGDATA:-/var/lib/postgresql/data}
    env_file:
      - .env
    volumes:
      - /volumes/servicos/db_data:${PGDATA:-/var/lib/postgresql/data}
    networks:
      - backend
  webproxy:
    image: efsouza/webgis:proxy_ufpr-latest
    restart: always
#    build: ../nginx
    volumes:
      - /volumes/servicos/static:/static
    ports:
      - "80:80"
    depends_on:
      - db
    networks:
      - backend
      - frontend
  geoserver:
    image: docker.osgeo.org/geoserver:2.23.0
    env_file:
      - .env
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - /volumes/servicos/geoserver_datadir:/opt/geoserver_data
    networks:
      - backend
      - frontend
    depends_on:
      - db
  django_app:
    build:
      context: .
      dockerfile: Dockerfile
    #image: efsouza/webgis:webgis_ufpr-latest
    env_file:
      - .env
    environment:
      POSTGRES_HOST: ${PG_HOSTNAME}
      POSTGRES_DB: ${PG_DBNAME}
      POSTGRES_PORT: ${PG_PORT}
#    command: >
#        bash -c "
#                apt-get update && \
#                apt-get install -y inetutils-ping iproute2 && \
#                ping -c 5 db 
#                "
    depends_on:
      - db
      - webproxy
#    ports:
#      - "8000"
    networks:
      - backend
    volumes:
      - .:/code
      - /volumes/servicos/static:/static
networks:
  backend:
  frontend:
    #volumes:
    #db_data:
    #static:
